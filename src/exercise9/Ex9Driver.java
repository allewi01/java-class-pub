/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exercise9;

/**
 *
 * @author allewi01
 */
public class Ex9Driver extends javax.swing.JFrame {

    /**
     * Creates new form Ex9Driver
     */
    public Ex9Driver() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TempInput = new javax.swing.JTextField();
        FromLabel = new javax.swing.JLabel();
        FromDropdown = new javax.swing.JComboBox();
        ConvertButton = new javax.swing.JButton();
        ToLabel = new javax.swing.JLabel();
        ToDropdown = new javax.swing.JComboBox();
        TempOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temperature Converter");

        FromLabel.setText("From:");

        FromDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fahrenheit", "Celsius", "Kelvin" }));
        FromDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromDropdownActionPerformed(evt);
            }
        });

        ConvertButton.setText("Convert");
        ConvertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertButtonActionPerformed(evt);
            }
        });

        ToLabel.setText("To:");

        ToDropdown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fahrenheit", "Celsius", "Kelvin" }));

        TempOutput.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(TempOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TempInput)
                            .addComponent(ConvertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FromLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(ToLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FromDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ToDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TempInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromLabel)
                    .addComponent(FromDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConvertButton)
                    .addComponent(ToLabel)
                    .addComponent(ToDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TempOutput)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConvertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertButtonActionPerformed
        double fromValue;
        try {
            fromValue = Double.parseDouble(TempInput.getText());
        } catch (Exception ex) {
            TempOutput.setText("Error");
            return;
        }
        Ex9Converter converter = new Ex9Converter();
        if (FromDropdown.getSelectedItem() == "Fahrenheit") {
            if (ToDropdown.getSelectedItem() == "Fahrenheit") {
                TempOutput.setText(String.valueOf(converter.f2f(fromValue)));
            }
            else if (ToDropdown.getSelectedItem() == "Celsius") {
                TempOutput.setText(String.valueOf(converter.f2c(fromValue)));
            }
            else if (ToDropdown.getSelectedItem() == "Kelvin") {
                TempOutput.setText(String.valueOf(converter.f2k(fromValue)));
            }
        }
        else if (FromDropdown.getSelectedItem() == "Celsius") {
            if (ToDropdown.getSelectedItem() == "Fahrenheit") {
                TempOutput.setText(String.valueOf(converter.c2f(fromValue)));
            }
            else if (ToDropdown.getSelectedItem() == "Celsius") {
                TempOutput.setText(String.valueOf(converter.c2c(fromValue)));
            }
            else if (ToDropdown.getSelectedItem() == "Kelvin") {
                TempOutput.setText(String.valueOf(converter.c2k(fromValue)));
            }
        }
        else if (FromDropdown.getSelectedItem() == "Kelvin") {
            if (ToDropdown.getSelectedItem() == "Fahrenheit") {
                TempOutput.setText(String.valueOf(converter.k2f(fromValue)));
            }
            else if (ToDropdown.getSelectedItem() == "Celsius") {
                TempOutput.setText(String.valueOf(converter.k2c(fromValue)));
            }
            else if (ToDropdown.getSelectedItem() == "Kelvin") {
                TempOutput.setText(String.valueOf(converter.k2k(fromValue)));
            }
        }
    }//GEN-LAST:event_ConvertButtonActionPerformed

    private void FromDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FromDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FromDropdownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ex9Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ex9Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ex9Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ex9Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ex9Driver().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConvertButton;
    private javax.swing.JComboBox FromDropdown;
    private javax.swing.JLabel FromLabel;
    private javax.swing.JTextField TempInput;
    private javax.swing.JLabel TempOutput;
    private javax.swing.JComboBox ToDropdown;
    private javax.swing.JLabel ToLabel;
    // End of variables declaration//GEN-END:variables
}
